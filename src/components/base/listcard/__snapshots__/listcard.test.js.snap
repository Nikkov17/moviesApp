// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Listcard snapshot check snaphot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListCard
    item={
      Object {
        "description": "check description",
        "img": "check img",
        "title": "check title",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          alt="movie poster"
          className="img"
          src="check img"
        />,
        <p
          className="card-text movie-title"
        >
          check title
        </p>,
        <p
          className="card-text movie-description"
        >
          check description
        </p>,
      ],
      "className": "card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "movie poster",
          "className": "img",
          "src": "check img",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "check title",
          "className": "card-text movie-title",
        },
        "ref": null,
        "rendered": "check title",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "check description",
          "className": "card-text movie-description",
        },
        "ref": null,
        "rendered": "check description",
        "type": "p",
      },
    ],
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt="movie poster"
            className="img"
            src="check img"
          />,
          <p
            className="card-text movie-title"
          >
            check title
          </p>,
          <p
            className="card-text movie-description"
          >
            check description
          </p>,
        ],
        "className": "card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "movie poster",
            "className": "img",
            "src": "check img",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "check title",
            "className": "card-text movie-title",
          },
          "ref": null,
          "rendered": "check title",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "check description",
            "className": "card-text movie-description",
          },
          "ref": null,
          "rendered": "check description",
          "type": "p",
        },
      ],
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
