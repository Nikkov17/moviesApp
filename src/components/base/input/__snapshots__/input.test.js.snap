// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`input snapshot check snaphot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Input
    getMoviesList={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        className="input-container-wrapper"
        onSubmit={[Function]}
      >
        <label
          className="input-label"
          htmlFor="titleInput"
        >
          Find your movie
          <input
            className="input"
            id="titleInput"
            type="text"
          />
        </label>
        <button
          className="submit-button"
          type="submit"
        >
          Submit
        </button>
      </form>,
      "className": "input-container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            className="input-label"
            htmlFor="titleInput"
          >
            Find your movie
            <input
              className="input"
              id="titleInput"
              type="text"
            />
          </label>,
          <button
            className="submit-button"
            type="submit"
          >
            Submit
          </button>,
        ],
        "className": "input-container-wrapper",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Find your movie",
              <input
                className="input"
                id="titleInput"
                type="text"
              />,
            ],
            "className": "input-label",
            "htmlFor": "titleInput",
          },
          "ref": null,
          "rendered": Array [
            "Find your movie",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input",
                "id": "titleInput",
                "type": "text",
              },
              "ref": Object {
                "current": null,
              },
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Submit",
            "className": "submit-button",
            "type": "submit",
          },
          "ref": null,
          "rendered": "Submit",
          "type": "button",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          className="input-container-wrapper"
          onSubmit={[Function]}
        >
          <label
            className="input-label"
            htmlFor="titleInput"
          >
            Find your movie
            <input
              className="input"
              id="titleInput"
              type="text"
            />
          </label>
          <button
            className="submit-button"
            type="submit"
          >
            Submit
          </button>
        </form>,
        "className": "input-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              className="input-label"
              htmlFor="titleInput"
            >
              Find your movie
              <input
                className="input"
                id="titleInput"
                type="text"
              />
            </label>,
            <button
              className="submit-button"
              type="submit"
            >
              Submit
            </button>,
          ],
          "className": "input-container-wrapper",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Find your movie",
                <input
                  className="input"
                  id="titleInput"
                  type="text"
                />,
              ],
              "className": "input-label",
              "htmlFor": "titleInput",
            },
            "ref": null,
            "rendered": Array [
              "Find your movie",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input",
                  "id": "titleInput",
                  "type": "text",
                },
                "ref": Object {
                  "current": null,
                },
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Submit",
              "className": "submit-button",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Submit",
            "type": "button",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
